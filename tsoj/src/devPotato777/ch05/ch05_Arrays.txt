배열
같은 타입의 여러 변수를 하나의 묶음으로 다루는 것

배열의 선언과 생성
타입[] 변수이름;				// 배열을 선언 (배열을 다루기 위한 참조변수 선언)
변수이름 = new 타입[길이];	// 배열을 생성 (실제 저장공간을 생성)

대게 배열의 선언과 생성을 동시에 한다.
타입[] 변수이름 = new 타입[길이];

배열의 길이와 인덱스
배열의 요소 (element) : 생성된 배열의 각 저장공간
인덱스 (index)		 :  배열의 요소마다 붙여진 일련번호, 각 요소를 구별하는데 사용된다.
						인덱스의 범위는 0부터 '배열길이 -1'까지이다.

예를 들어 길이가 5인 배열은 모두 5개의 요소 (저장공간)을 가지며
인덱스의 범위는 0부터 4까지 (0, 1, 2, 3, 4)가 된다.

'배열이름[인덱스]' 의 형식으로 배열의 요소에 접근한다.

배열의 길이는 int범위의 양의 정수 (0도 포함)이어야 한다.
자바에서는 JVM이 모든 배열의 길이를 별도 관리한다.
★'배열이름.length'를 통해 배열의 길이에 대한 정보를 얻을 수 있다.
생성된 배열의 길이는 변하지 않기 때문에 배열.length는 상수이다.
즉, 값을 읽을 수만 있을 뿐 변경할 수 없다.

배열의 길이 변경하기
1. 더 큰 배열을 새로 생성한다.
2. 기존 배열의 내용을 새로운 배열에 복사한다.
이러한 작업들은 꽤나 비용이 많이 들기 때문에 기존의 2배 정도의 길이로 생성하는 것이 좋다.

배열의 초기화
int[] score = new int[] {50, 60, 70, 80, 90};	// 배열의 생성과 초기화를 동시에
int[] score = {50, 60, 70, 80, 90};				// new int[]를 생략할 수 있음

int[] score;
score = new int[] {50, 60, 70, 80, 90};			// OK
score = {50, 60, 70, 80, 90};					// Error. new int[]를 생략할 수 없음

배열의 출력
Arrays.toString(배열이름)


배열의 복사
1. for문 이용
2. System.arraycopy() 메소드 이용
3. Arrays 클래스 이용

for문보다 System.arraycopy()를 사용하는 것이 효율적이다.


★이클립스에서 커맨드 라인을 통해 입력 받기
run configurations - arguments 에 입력


다차원 배열
선언 방법
타입[][] 변수이름;	ex) int[][] score;
타입 변수이름[][];	ex) int score[][];
타입[] 변수이름[];	ex) int[] score[];

2차원 배열의 index
행(row)과 열(column)로 구성되어 있기 때문에
index도 행과 열에 각각 하나씩 존재한다.
'행index'의 범위는 '0~행의 길이-1'이고
'열index'의 범위는 '0~열의 길이-1'이다.

2차원 배열의 각 요소에 접근하는 방법은
'배열이름[행index][열index]이다.

2차원 배열의 초기화
int[][] arr = {
					{1, 2, 3},
					{4, 5, 6}
			  } 

			  
가변 배열
2차원 이상의 다차원 배열을 생성할 때
전체 배열 차수 중 마지막 차수의 길이를 지정하지 않고,
추후에 각기 다른 길이의 배열을 생성함으로써
고정된 형태가 아닌 보다 유동적인 가변 배열을 구성할 수 있다.

int[][] score = new int[5][3];	// 5행 3열의 2차원 배열 생성

위 코드를 다음과 같이 표현 할 수 있다.
int[][] score = new int[5][];	// 두 번째 차원의 길이는 지정하지 않는다.
score[0] = new int[3];
score[1] = new int[3];
score[2] = new int[3];
score[3] = new int[3];
score[4] = new int[3];

첫 번째 코드와 같이 2차원 배열을 생성하면
직사각형 테이블 형태의 고정적인 배열만 생성할 수 있지만,
두 번째 코드와 같이 2차원 배열을 생성하면 각 행마다 다른 길이의 배열을 생성하는 것이 가능하다.
int[][] socre = new int[5][];
score[0] = new int[4];
score[1] = new int[3];
score[2] = new int[2];
score[3] = new int[2];
score[4] = new int[3];

score.length의 값은 여전히 5지만,
score[0].length의 값은 4이고
score[1].length의 값은 3으로 서로 다르다.