package devPotato777.ch04;

/*
 * for문
 * 
 * for문의 구조와 수행순서
 * 조건식이 참인 동안 블럭{} 내의 문장들을 반복하다 거짓이 되면 반복문을 벗어난다.
 * 
 * for (초기화; 조건식; 증감식) {
 * 		// 조건식이 참일 때 수행될 문장들을 적는다.
 * }
 * 
 * 
 * - 초기화
 * 반복문에 사용될 변수를 초기화하는 부분이며 처음에 한 번만 수행된다.
 * 보통 변수 하나로 for문을 제어하지만,
 * 둘 이상의 변수가 필요할 때는 콤마를 구분자로 변수를 초기화하면 된다. (단, 두 변수의 타입은 같아야 한다.)
 * 
 * for (int i = 1; i <= 10; i++) { ... }		// 변수 i의 값을 1로 초기화 한다.
 * for (int i = 1, j = 0; i <= 10; i++) { ... }	// int타입의 변수 i와 j를 선언하고 초기화
 * 
 * - 조건식
 * for의 뜻이 '~하는 동안'이므로 조건식이 '참인 동안' 반복을 계속한다고 생각하면 쉽다.
 * 조건식을 잘못 작성하면 블럭{} 내의 문장이 한 번도 수행되지 않거나 무한반복에 빠지기 쉬우므로 주의해야 한다.
 * 
 * for (int i = 1; i <= 10; i++) { ... }	// 'i <= 10'가 참인 동안 블럭{} 안의 문장들을 반복
 * 
 * - 증감식
 * 반복문을 제어하는 변수의 값을 증가 또는 감소시키는 식이다.
 * 
 * for (int i = 1; i <= 10; i++) { ... }	// 1부터 10까지 1씩 증가
 * for (int i = 10; i > 1; i--) { ... }		// 10부터 1까지 1씩 감소
 * for (int i = 1; i <= 10; i+= 2) { ... }	// 1부터 10까지 2씩 증가
 * for (int i = 1; i <= 10; i*= 3) { ... }	// 1부터 10까지 3배씩 증가
 * 
 * 증감식도 쉼표를 이용해서 두 문장 이상을 하나로 연결해서 쓸 수 있다.
 * 
 * for (int i = 1, j = 10; i <= 10; i++, j--) { ... }	// i는 1부터 10까지 1씩 증가하고
 * 														// j는 1부터 10까지 1씩 감소한다.
 * 
 * 초기화, 조건식, 증감식은 필요하지 않으면 생략할 수 있으며, 모두 생략도 가능하다.
 * for (;;) { ... }	// 초기화, 조건식, 증감식 모두 생략. 조건식은 참이 되고 무한 반복문이 된다.
 * 대신 블럭{} 안에 if문을 넣어서 특정 조건을 만족하면 for문을 빠져 나오게 해야 한다.
 */

public class Ex12 {

	public static void main(String[] args) {
		for (int i = 1; i <= 5; i++)
			System.out.println(i); // i의 값을 출력한다.

		for (int i = 1; i <= 5; i++)
			System.out.print(i); // print() 를 쓰면 가로로 출력된다.

		System.out.println();
	}
}
