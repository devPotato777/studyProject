package codeending.ch06;
/*
 * 객체지향언어
 * 
 * 1.코드의 재사용성이 높다 
 * 2.코드의 관리가 용이하다.
 * 3.신뢰성이 높은 프로그래밍을 가능하게 한다.
 * 
 * 클래스와 객체 
 * 클래스의 정의 : 클래스란 객체를 정의해 놓은 것이다.
 * 클래스의 용도 : 클래스는 객체를 생성하는데 사용된다.
 * 
 * 객체의 정의 : 실제로 존재하는 것. 사물 또는 개념
 * 객체의 용도 : 객체가 가지고 있는 기능과 속성에 따라 다름
 * 
 * 유형의 객체 : 책상, 의자, 자동차, TV와 같은 사물
 * 무형의 객체 : 수학송식, 프로그램 에러와 같은 논리나 개념
 * 
 * 객체와 인스턴스 
 * 클래스로부터 객체를 만드는 과정을 클래스의 인스턴스화라고 하며,
 * 클래스로부터 만들어진 객체를 그 클래스의 인스턴스라고 한다.
 * 
 * 객체의 구성요소 - 속성과 기능
 * 객체는 속성과 기능, 두 종료의 구성요소로 이루어져 있으며, 
 * 일반적으로 객체는 다수의 속송과 다수의 기능을 갖는다.
 * 즉, 객체는 속성과 기능의 집합이라고 할 수 있다. 
 * 객체가 가지고 있는 속솽과 기능을 그 개개체의 멤머(구성원, member)라 한다. 
 * 
 * 속성(property) 멤버변수(member variable), 특성(attribute), 필드(field), 상태(state)
 * 기능(function) 메서드(method), 함수(function), 행위(behavior)
 * 
 * 인스턴스는 참조변수를 통해서만 다룰 수 있으며, 
 * 참조변수의 타입은 인스턴스의 타입과 일치해야한다.
 * 
 * 
 */
public class Ex01 {

	public static void main(String[] args) {
		Tv t;				//Tv인스턴스를 참조하기 위한 변수 t를 선언
		t = new Tv(); 		//Tv인스턴스를 생성한다.
		t.channel = 7;		//Tv인스턴스의 멤버변수 channel의 값을 7로 한다.
		t.channelDown();    //Tv인스턴스의 메서드 channelDown()을 호출한다.
		System.out.println("현재 채널은 " + t.channel + " 입니다.");
		
	}

}
